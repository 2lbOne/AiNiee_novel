1.6：
1.新增功能：当readcode为空列表时，读取全部文本
2.OutputBySearch新增一项默认参数full，默认为False，此时导出的xlsx文件只有原文和译文列；为True时，包含全部列
3.删掉导出名字时总会有的一行"":""
4.现在注入游戏时，黑名单文件也会被复制到输出文件夹内了
1.5：
1.发现并解决了一些游戏，System.json\gameTitle是空时，程序会报错的问题
2.写xlsx文件也改用openpyxl，因为pandas的写入有字符长度限制，openpyxl的限制更长（虽然解决了长度问题，但经常导致地址保存不完整，原因未知，不能解决，所以有了更新4）
3.Name.json改为自动导入到name文件夹，如果不存在，会自动创建这个文件夹。获取到的名字会自动按照非中日字符拆分开
4.保存工程改用csv，以\uFFFC（￼）为分隔符。导出翻译文件还是xlsx，但是只导出原文和译文列。1.4版本以前的翻译工程不再支持读取，需要重新从游戏读取
# 不建议用excel打开工程的csv文件，可能会出现问题
5.config.yaml默认配置修改：
（1）读取名字时的默认排除项（'NameWithout'）增加技能名（'Skills*name'），道具名（'Items*name'）和状态名（'States*name'）
（2）黑名单地址（'BlackDir'）新增'SrcEventIdOrName'。
# 在翻译ACT游戏时，建议把'note'也加入黑名单地址，否则大概率无法攻击或攻击没有效果
6.根据搜索结果导出json文件函数，json文件从{原文：原文}变为{原文：译文}
7.一键式操作新增游戏版本更新功能，此时'translation_path'为旧版翻译文件的路径。运行逻辑是，把旧版翻译文件导入到新版游戏，导出后ainiee会自动忽略已翻译的文本
8.一键式操作新增导出翻译文件（xlsx）功能。
1.4:
1.utf8读取json文件失败时，尝试用chardet自适应编码，chardet返回none的情况下，默认用ansi打开。还打不开就跳过
2.读取json文件和xlsx文件时，不会读取名字含有xlsx和json的文件夹了
3.去掉了Jr_Tpp类外的，一个没什么用的函数
4.添加了是否为日文游戏的开关，config配置项ja，翻译非日文游戏时，必须将其设为0（没有经过测试，不能保证像日文游戏一样不出bug）
1.3:
1.对data文件夹更加精准地定位，从判断'data'是否在路径内变为判断'\\data\\'，从而防止读取到不必要的json文件，以及防止注入时创建路径报错
2.修复了一个不为人知的bug（__CheckNAN函数）
3.改用openpyxl读xlsx，因为用pandas会把'=xxx'的字符串当成excel的错误函数表达式，读成NaN，而且解决不了
4.主函数整体用try包裹，现在出bug也不会闪退了。并且一键读取游戏后，可以直接进入注入的操作界面，不再需要读取翻译工程
5.地址不再按照英文逗号分隔，而是按照“☆↑↓”分割（谁能想到他还真有在地址里加逗号的）
1.2：
1.修复了搜索反选的逻辑错误，以前搜索反选"A*B"时，会返回不含A的数据中，不含B的数据；现在会返回，不含A且不含B的数据。并且现在搜索结果会返回没有经过大小写转化的原数据
2.现在保存会自动在保存路径下创建一个data文件夹，xlsx放在data里，config放在外面
3.增加新功能DNoteB，自动处理note类问题。
4.运行主体函数
